plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'com.google.devtools.ksp' version '1.6.10-1.0.2'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id("com.github.triplet.play") version "3.7.0"
}

kotlin {

    sourceSets {
        debug {
            kotlin.srcDir("build/generated/ksp/debug/kotlin")
        }
        release {
            kotlin.srcDir("build/generated/ksp/release/kotlin")
        }

    }
}

android {
    compileSdk 33
    def versionPropsFile = file('version.properties')
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()

        versionProps.load(new FileInputStream(versionPropsFile))
        def name = versionProps['VERSION_NAME']
        def code = versionProps['VERSION_CODE'].toInteger()
        versionProps['VERSION_CODE'] = code.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
        defaultConfig {
            configurations.all {
                resolutionStrategy { force 'androidx.core:core-ktx:1.6.0' }
            }

            applicationId "com.abhi41.jetfoodrecipeapp"
            minSdk 24
            targetSdk 32
            versionCode code
            versionName name

            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
            vectorDrawables {
                useSupportLibrary true
            }
            multiDexEnabled true
        }
    } else {
        // throw StopExecutionException("error occured")
    }
    // add this line
    increaseVersionCode()

    signingConfigs {
        create("release") {
            def keystoreFile = file('keystore.properties')
            if (keystoreFile.canRead()) {
                def Properties keystoreFileProps = new Properties()
                keystoreFileProps.load(new FileInputStream(keystoreFile))
                storeFile = keystoreFileProps['KEYSTORE_FILE'].toString()
                storePassword = keystoreFileProps['KEYSTORE_PASSWORD'].toString()
                keyAlias = keystoreFileProps['KEY_ALIAS'].toString()
                keyPassword = keystoreFileProps['KEY_PASSWORD'].toString()//
            }

            //this is for reading values from gradle.properties
            /*  storeFile = file(project.property("KEYSTORE_FILE").toString())
              storePassword = project.property("KEYSTORE_PASSWORD").toString()
              keyAlias = project.property("KEY_ALIAS").toString()
              keyPassword = project.property("KEY_PASSWORD").toString()*/
        }
    }

    buildTypes {

        getByName("release") {
            debuggable false
            minifyEnabled true
            shrinkResources true
            ext.enableCrashlytics = true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig = signingConfigs.getByName("release")
        }
        debug {
            debuggable true
            /*     minifyEnabled true
                 shrinkResources true
                 ext.enableCrashlytics = true
                 proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'*/
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    namespace 'com.abhi41.jetfoodrecipeapp'
    defaultConfig {
        minSdk 21
    }
}
//Add a configuration block after android block
//after then try this command to check everythis is working ./gradlew bootstrapListing
//play folder will gets generate in src/main/play location
play {
    String apiKeyFile = project.property("googlePlayApiKey").toString()
    serviceAccountCredentials.set(file(apiKeyFile))
    track.set("internal")
}

def increaseVersionCode() {
    gradle.taskGraph.whenReady { taskGraph ->
        if (taskGraph.hasTask(assembleRelease)) {
            /* when run release task */
            if (versionPropsFile.canRead()) {
                def Properties versionProps = new Properties()

                versionProps.load(new FileInputStream(versionPropsFile))

                def build = versionProps['VERSION_BUILD'].toInteger() + 1
                def code = versionProps['VERSION_CODE'].toInteger() + 1

                versionProps['VERSION_BUILD'] = build.toString()
                versionProps['VERSION_CODE'] = code.toString()
                versionProps.store(versionPropsFile.newWriter(), null)
            }
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation 'androidx.activity:activity-compose:1.3.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    // Compose Navigation
    //implementation("androidx.navigation:navigation-compose:2.4.0-beta02")
    implementation("androidx.navigation:navigation-compose:2.5.0-rc01")
    // Room components
    implementation "androidx.room:room-runtime:2.3.0"
    kapt "androidx.room:room-compiler:2.3.0"
    implementation "androidx.room:room-ktx:2.3.0"

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation("com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0")

    // Paging 3.0
    implementation 'androidx.paging:paging-compose:1.0.0-alpha14'

    // KotlinX Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:1.2.2"

    // DataStore Preferences
    implementation "androidx.datastore:datastore-preferences:1.0.0"

    // Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.39"
    kapt "com.google.dagger:hilt-android-compiler:2.39"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    // Coil
    implementation("io.coil-kt:coil-compose:1.3.2")

    //for observing mutable and live data
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    // LiveData
    def lifecycle_version = "2.2.0"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"

    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9'

    // Horizontal Pager and Indicators - Accompanist

    implementation "com.google.accompanist:accompanist-pager:$accompanist_version"
    implementation "com.google.accompanist:accompanist-pager-indicators:$accompanist_version"
    implementation("androidx.compose.foundation:foundation:1.1.1")

    //Contextual app bar -Accompanist
    implementation "com.google.accompanist:accompanist-systemuicontroller:$accompanist_version"

    //multidex support
    implementation 'com.android.support:multidex:1.0.3'

    // Jsoup use to parse html tags to web browsers
    implementation 'org.jsoup:jsoup:1.13.1'

    def sqlcipher_version = "4.5.0"
    implementation "net.zetetic:android-database-sqlcipher:$sqlcipher_version"

    //new navigation library
    implementation 'io.github.raamcosta.compose-destinations:core:1.1.2-beta'
    implementation "com.google.accompanist:accompanist-navigation-animation:0.26.3-beta"

    ksp 'io.github.raamcosta.compose-destinations:ksp:1.1.2-beta'

    //flow layout
    implementation "com.google.accompanist:accompanist-flowlayout:0.17.0"

    implementation platform('com.google.firebase:firebase-bom:30.5.0')
    // Add the dependencies for the Crashlytics and Analytics libraries
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-analytics'

    //constraint layout
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.1.0-alpha01'

}
