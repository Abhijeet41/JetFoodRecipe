<resources>
    <string name="app_name">JetFoodRecipeApp</string>
    <!-- TODO: Remove or change this placeholder text -->
    <string name="recipies_fragment">Recipies</string>
    <string name="favourites_recipies_fragment">Favourites</string>
    <string name="food_joke">Joke</string>
    <string name="meal_type">Meal Type</string>
    <string name="main_course">Main Course</string>
    <string name="side_dish">Side Dish</string>
    <string name="ketogenic">Ketogenic</string>
    <string name="vegan">Vegan</string>
    <string name="pescetarian">Pescetarian</string>
    <string name="paleo">Paleo</string>
    <string name="primal">Primal</string>
    <string name="whole30">Whole30</string>
    <string name="low_fodmap">Low FODMAP</string>
    <string name="search">Search</string>

    <string name="gluten_free">Gluten Free</string>
    <string name="healthy">Healthy</string>
    <string name="diary_free">Diary Free</string>
    <string name="cheap">Cheap</string>
    <string name="vegetarian">Vegetarian</string>
    <string name="lorem_ipsum">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. </string>
    <string name="error">Error</string>

    <string name="no_favorite_recipes">No Favorite Recipes</string>
    <string name="delete_favorite_menu">Delete Favorite Menu</string>
    <string name="delete_all">Delete All</string>
    <string name="share">Share</string>
    <string name="food_joke_txt">\"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. \"</string>
    <string name="descriptionDemo">When it comes to laying out the child composables within a Column, we may want to control how much space each child is to occupy without having to define a fixed height. In these cases we can utilise the Weight modifier to build fluid and dynamic layouts – the Weight modifier is also a part of the Column Scope. The weight defines how much of the available height the composable should get – so let’s imagine that there are three composables within a container, two of which have a weight of 3 and the third has a weight of 2. This totals to 8 – meaning that the available height will be divided by 8 and distributed amongst the children for their corresponding weight.</string>
    <string name="api_key_limited">Api Key Limited.</string>
    <string name="connection_timeout">Connection TimeOut</string>
    <string name="something_wrong">Oops, something went wrong!</string>
    <string name="check_internet_connection">Couldn\'t reach server, check your internet connection.!</string>
</resources>